name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: asia-southeast1 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: infra-dev    # TODO: update to cluster name
  GKE_ZONE: asia-southeast1-a   # TODO: update to cluster zone
  DEPLOYMENT_NAME: studio # TODO: update to deployment name
  REPOSITORY: infra-dev # TODO: update to Artifact Registry docker repository
  IMAGE: studio

jobs:
  # build-publish:
  #   name: Setup, Build, Publish, and Deploy
  #   runs-on: ubuntu-latest
  #   environment: dev

  #   permissions:
  #     contents: 'read'
  #     id-token: 'write'

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3

    # Alternative option - authentication via credentials json
    # - id: 'auth'
    #   uses: 'google-github-actions/auth@v2'
    #   with:
    #     credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    # - name: Docker configuration
    #   run: |-
    #     # echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
    #     echo '${{ secrets.GCP_CREDENTIALS }}' > gcp_credentials.json
    #     docker login -u _json_key --password-stdin https://$GAR_LOCATION-docker.pkg.dev < gcp_credentials.json

    # # Get the GKE credentials so we can deploy to the cluster
    # - name: Set up GKE credentials
    #   uses: google-github-actions/get-gke-credentials@v2
    #   with:
    #     cluster_name: ${{ env.GKE_CLUSTER }}
    #     location: ${{ env.GKE_ZONE }}

    # # Copy environment variables from secrets and create .env file
    # - name: Copy environment variables and create .env file
    #   run: |
    #     echo "${{ secrets.ENV_VAR }}" >> .env

    # # Build the Docker image
    # - name: Build
    #   run: |-
    #     docker build \
    #       --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
    #       --build-arg GITHUB_SHA="$GITHUB_SHA" \
    #       --build-arg GITHUB_REF="$GITHUB_REF" \
    #       .
    # # Push the Docker image to Google Artifact Registry
    # - name: Publish
    #   run: |-
    #     docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

    # - name: Update Docker image tag
    #   run: |
    #     yq e -i '.image.tag="'c01e0776c497edc44c2f4b777ec40e4effe1afae'"' argocd/argocd-helm/apps/charts/next/values/studio.values.yaml
    #     git config --global user.email "alfathmas24@gmail.com"
    #     git config --global user.name "github-agent"
    #     git add .
    #     git commit -m "bump up image @bypass-review"
    #     git push -u origin main

    # Set up kustomize
    # - name: Set up Kustomize
    #   run: |-
    #     curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
    #     chmod u+x ./kustomize

    # # Deploy the Docker image to the GKE cluster
    # - name: Deploy
    #   run: |-
    #     # replacing the image name in the k8s template
    #     ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
    #     ./kustomize build . | kubectl apply -f -
    #     kubectl rollout status deployment/$DEPLOYMENT_NAME
    #     kubectl get services -o wide
  update-manifest:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: alfathmas/argocd
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Set up SSH Key
      run: |
        mkdir -p ~/.ssh/
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts

    # Checkout the Kubernetes manifest repository
    - name: Clone Another Repository with SSH
      run: |
        git clone git@github.com:alfathmas/argocd.git
        ls -la
        yq e -i '.image.tag="'c01e0776c497edc44c2f4b777ec40e4effe1afae'"' argocd/argocd-helm/apps/charts/next/values/studio.values.yaml
        git config --global user.email "alfathmas24@gmail.com"
        git config --global user.name "github-agent"
        git add .
        git commit -m "bump up image @bypass-review"
        git push -u origin main