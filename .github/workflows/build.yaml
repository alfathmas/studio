name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: asia-southeast1 # TODO: update region of the Artifact Registry
  GKE_CLUSTER: infra-dev    # TODO: update to cluster name
  GKE_ZONE: asia-southeast1-a   # TODO: update to cluster zone
  DEPLOYMENT_NAME: studio # TODO: update to deployment name
  REPOSITORY: infra-dev # TODO: update to Artifact Registry docker repository
  IMAGE: studio
  ARGOCD_SERVER: argocd.buruhketik.com
  ARGOCD_PASSWORD: UVkIFRTzTTt2ao8B
  ARGOCD_APP: argocd/studio

jobs:
  build-publish:
    name: Build and Publish

    runs-on: ubuntu-latest
    environment: dev

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Docker configuration
      run: |-
        # echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
        echo '${{ secrets.GCP_CREDENTIALS }}' > gcp_credentials.json
        docker login -u _json_key --password-stdin https://$GAR_LOCATION-docker.pkg.dev < gcp_credentials.json

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Copy environment variables from secrets and create .env file
    - name: Copy environment variables and create .env file
      run: |
        echo "${{ secrets.ENV_VAR }}" >> .env

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

  update-image:
    needs: build-publish
    name: Update Image

    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: alfathmas/argocd
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # Checkout the Kubernetes manifest repository
    - name: update image tag and push to manifest repo
      run: |
        yq e -i '.image.tag="'$GITHUB_SHA'"' argocd-helm/apps/charts/next/values/studio.values.yaml
        git config --global user.email "alfathmas24@gmail.com"
        git config --global user.name "github-agent"
        git add .
        git commit -m "bump up image @bypass-review"
        git push -u origin main

  sync-app:
    needs: update-image
    name: Sync App

    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Install ArgoCD CLI
      run: |
        VERSION=v2.9.3 # Select desired TAG from https://github.com/argoproj/argo-cd/releases
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/$VERSION/argocd-linux-amd64
        sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
        rm argocd-linux-amd64

    - name: Login to ArgoCD
      run: |
        argocd login ${{ env.ARGOCD_SERVER }} --insecure --username admin --password ${{ env.ARGOCD_PASSWORD }}

    - name: Sync App
      run: |
        argocd app sync ${{ env.ARGOCD_APP }} --prune --timeout 600